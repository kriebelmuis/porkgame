name: Build

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download and unzip Lune
        run: |
          curl -L -f https://github.com/lune-org/lune/releases/download/v0.8.9/lune-0.8.9-linux-x86_64.zip > lune.zip
          unzip lune.zip
          chmod +x lune

      - uses: Roblox/setup-foreman@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Process code
        run: darklua process main.luau main.bundled.luau

      - name: Compile binaries
        run: |
          ./lune build main.bundled.luau -o pork-game-linux -t linux-x86_64
          ./lune build main.bundled.luau -o pork-game.exe -t windows-x86_64
          ./lune build main.bundled.luau -o pork-game-macos -t macos-x86_64

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        if: startsWith(github.ref, 'refs/tags/')

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: pork-game.exe
          asset_name: pork-windows-x86_64.exe
          asset_content_type: application/octet-stream
        if: startsWith(github.ref, 'refs/tags/')

      - name: Upload MacOs Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: pork-game-macos
          asset_name: pork-macos-x86_64
          asset_content_type: application/octet-stream
        if: startsWith(github.ref, 'refs/tags/')

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: pork-game-linux
          asset_name: pork-linux-x86_64
          asset_content_type: application/octet-stream
        if: startsWith(github.ref, 'refs/tags/')