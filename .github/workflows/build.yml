name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    tags:
      - "v*"
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
    
      - name: Install dependencies
        run: sudo apt install -y curl && sudo apt install -y unzip

      - name: Download Lune
        run: curl -L -f https://github.com/lune-org/lune/releases/download/v0.8.9/lune-0.8.9-linux-x86_64.zip > lune.zip

      - name: Unzip Lune
        run: unzip lune.zip && chmod +x lune
      
      - name: Compile Linux binary
        run: ./lune build core.luau -o game -t linux-x86_64

      - name: Compile Windows binary
        run: ./lune build core.luau -o game.exe -t windows-x86_64

      - name: Compile MacOS binary
        run: ./lune build core.luau -o game-macos -t macos-x86_64

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./game.exe
          asset_name: windows-x86_64
          asset_content_type: application/octet-stream

      - name: Upload MacOs Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./game-macos
          asset_name: macos-x86_64
          asset_content_type: application/octet-stream

        
      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./game
          asset_name: linux-x86_64
          asset_content_type: application/octet-stream
